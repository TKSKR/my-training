def get_magic_code(n):
  result = ""
  used_pairs = set()
  for i in range(1, 21):
      for j in range(i + 1, 21):
          if (i + j) != 0 and n % (i + j) == 0:
                pair = (i, j)
                if pair not in used_pairs:
                   result += str(i) + str(j)
                   used_pairs.add(pair)
  return result
while True:
    try:
       user_input = int(input("Введите число от 3 до 20: "))
       if 3 <= user_input <= 20:
           break
       else:
          print("Введенное число не соответствует диапазону от 3 до 20.")
    except ValueError:
        print("Некорректный ввод. Введите целое число от 3 до 20.")
result = get_magic_code(user_input)
print(f"Код для числа {user_input}: {result}")

# Как работает этот код:
#
# get_magic_code(n) функция:
#
# Принимает число n в качестве аргумента (число из первой вставки).
# Инициализирует пустую строку result, в которую будет записываться итоговый пароль.
# Использует множество used_pairs для отслеживания использованных пар чисел, чтобы не добавлять одинаковые пары.
# Использует вложенные циклы for i in range(1, 21) и for j in range(i + 1, 21) для перебора всех возможных
# пар чисел i и j в диапазоне от 1 до 20. Внутренний цикл начинается с i + 1,
# чтобы избежать повторения пар (например, (1, 2) и (2, 1)).
# Внутри циклов проверяется, что сумма i + j не равна 0 и что число n делится без остатка
# на сумму i + j (это проверка кратности).
# Если пара удовлетворяет условию кратности:
# Создаем кортеж pair из чисел i и j для хранения пары.
# Проверяем, что пара pair еще не использовалась, чтобы избежать повторений.
# Если пара не используется, то числа i и j (в виде строк) конкатенируются и добавляются к строке result.
# Пара pair добавляется в множество used_pairs для обозначения того, что она уже была использована.
# Функция возвращает строку result, которая представляет собой сгенерированный пароль.
# Основной код:
#
# Запрашивает у пользователя ввод числа от 3 до 20 с помощью цикла while и обработки исключений.
# Вызывает функцию get_magic_code(user_input), передавая введенное пользователем число.
# Выводит на экран полученный код в виде сообщения о том, что код был сгенерирован для введённого числа.

# Пример работы:
#
# Введите число от 3 до 20: 9
# Код для числа 9: 1218273645
# Ключевые моменты:
#
# Вложенные циклы: используются для перебора всех возможных пар.
# Условие кратности: n % (i + j) == 0 проверяет, делится ли n на сумму i+j без остатка.
# Множество used_pairs: используется для отслеживания использованных пар, что гарантирует отсутствие повторений.
# Корректный ввод данных: программа запрашивает ввод до тех пор,
# пока не будет введено число из нужного диапазона, и обрабатывает некорректный ввод.

# Этот код будет корректно генерировать пароль для любого числа от 3 до 20.