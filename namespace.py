calls = 0
def count_calls():
    # Функция определение "количества вызовов". Увеличивает счетчик вызовов на 1
    global calls # 'глобальные вызовы'
    calls += 1 # 'вызов увеличиваем на 1'


def string_info(string):
    #   Функция "информация о строке (string - строка)"
    #   Возвращает кортеж из длины строки, строки в верхнем регистре и строки в нижнем регистре.
    #
    #   Args (аргументы):
    #       string: Строка для обработки.
    #
    #   Returns (возвращается):
    #       Кортеж (длина, строка в верхнем регистре, строка в нижнем регистре).

    count_calls()# 'количество вызовов'
    return len(string), string.upper(), string.lower()
    # Возвращает len (строка), string upper (верхняя строка), string lower (нижняя строка)
    # Функция len() в Python принимает объект в качестве аргумента и
    # возвращает длину этого объекта. Например, количество элементов в списке.
    # Оператор return в Python используется для выхода из функции и возврата значения.
    # Он завершает вызов функции и передаёт значение обратно в вызывающий код.

def is_contains(string, list_to_search):
    #   Функция содержит (строка, список для поиска):
    #   Проверяет, находится ли строка в списке (без учета регистра).
    #   Args (аргументы):
    #       string (строка): Строка для поиска.
    #       list_to_search (список для поиска): Список строк для поиска.
    #   Returns (возвращает):
    #       True (истина), если строка находится в списке, иначе False (ложь).
    count_calls()# количество вызовов
    for item in list_to_search:# для элемента в list_to_search (в списке для поиска):
        if string.lower() == item.lower():# если строка в нижнем регистре
            # равна элементу в нижнем регистре
            return True # возвращает значение "истина"
        return False # возвращает значение "ложь"
print(string_info('CrocodILEs'))
print(string_info('Hippopotamuses'))
print(string_info('monkey'))
print(string_info('cachalots'))
print(string_info('green parrot'))
print(calls)

# Пояснения:
#
# Глобальная переменная calls:
#
# Инициализируется как 0 вне функций для отслеживания общего количества вызовов функций.
# Функция count_calls():
#
# Объявляет, что будет использовать глобальную переменную calls с помощью global calls.
# Увеличивает значение глобальной переменной calls на 1.
# Функция string_info(string):
#
# Принимает строку string в качестве аргумента.
# Вызывает функцию count_calls() для увеличения счетчика.
# Возвращает кортеж, содержащий:
# Длину строки (с помощью len(string)).
# Строку в верхнем регистре (с помощью string.upper()).
# Строку в нижнем регистре (с помощью string.lower()).
# Функция is_contains(string, list_to_search):
#
# Принимает строку string и список строк list_to_search в качестве аргументов.
# Вызывает функцию count_calls() для увеличения счетчика.
# Перебирает элементы item списка list_to_search в цикле for.
# Сравнивает строку string в нижнем регистре (с помощью string.lower())
# с элементом item из списка также в нижнем регистре (с помощью item.lower()).
# Если строки совпадают (без учета регистра), возвращает True.
# Если совпадений не найдено, возвращает False.
# Примеры вызовов и вывода:
#
# Вызываются функции string_info и is_contains с различными аргументами.
# Результаты работы функций и значение счетчика calls выводятся на консоль.
# Ключевые моменты:
#
# Глобальная переменная: использование global calls для доступа к глобальной переменной внутри функций.
# Счетчик вызовов: Функция count_calls вызывается в начале каждой основной функции (string_info и is_contains).
# Без учета регистра: Использование .lower() для сравнения строк без учета регистра.
# Кортеж как результат: string_info возвращает несколько значений в кортеже.
